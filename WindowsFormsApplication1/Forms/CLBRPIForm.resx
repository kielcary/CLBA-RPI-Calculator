<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAOiAAAAEAGAAoFwAAFgAAACgAAAA6AAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqKioqKioqKioqKiouLi4sLCwpKSkwMDA7OztYWFhiYmJ7e3uIiIiGhoaDg4OEhISEhIR6enp6enp5
        eXl5eXl+fX1HU1UoPD8vQEQuQEMtP0MuQEMtP0IxQkUjNzs/TU9+fX15eXl4eHl/fn58e3syQkUqPD8t
        P0IwQkUuQEMuQEMtPkEtP0EtP0ItP0IwQUQvQUQvQEMuP0IuP0ItP0IuQEMxQkUwQkQvQ0Y1QEEAAAkJ
        CQoKCgoKCgsLCwsLCwsLCwwMDA4ODhAQECMjIx8fH2VlZcnJycXFxdjY2NDQ0MnJyf////7+/vz8/Pr6
        +v///6C3uwhCTBdNVhVLVRRLVBRLVBVLVA9HUSBUXb/O0P////r7+/////f6+myRlxVPWSFYYhpTXQpE
        ThNKUxRMVRdRWxxVXxtVXxtVXxBKVBVMVRdQWhtVXx1XYRtWYBtWYBBLVRRLVRhTXipMUgAADQ0NDQ0N
        DQ0NDQ0NDQ0NDg4ODg4OEBAQDw8PDQ0NCgoKAgICBgYGBwcHEhISAgICRkZG+/v77u7u7+/v7O3t9vX1
        193eHE5XEkZPFEhRFEdQF0pTEkZPGktUz9fY/Pj37e7u8fDw5+nqPWduGjxDP0tNRlBSYnBzXX+FE0lT
        E0JLQVNWTFteRlVXVF5gaYOHGE9YIEdNSlhbRlVYS1dZVmRma4WJLl5nFE1WK0pQAAAMDAwNDQ0NDQ0O
        Dg4ODg4ODg4ODg4PDw8RERERERERERESEhISEhIRERETExMBAQFvb2/+/v7s7Ozv7+/t7e3x8fHr7Owy
        XmYKPkgVR1ERRE4HPUcAMz6Ppan8+Pfm5+jo6en///6fs7cPJSktJyYnKSkhJSYdFhVnXlxfgYcPO0Qq
        JiYqJiUwNjcXISNWZGYtYWocNjsnHh0/REUgNTkfJic9NjR9jpIXUlwpSU8AAAwMDA4ODg0NDQ4ODg4O
        Dg8PDw8PDw8PDxERERERERISEhERERERERISEhYWFgYGBouLi/z8/Ozs7Orq6uzt7evr7PXz8k5zegQ6
        RQU6RAw/SUhudZissOnq6ubn5+bn5/Du7czU1jJbYh8jJFBNTUJqcQQ6RBo8QhYzOChTWxpHTi8wMEI/
        P1t9gw1HURBGThJKVCVBRisnJldfYExiZzM+QCUiIVZtcRhTXShITgAADQ0NDg4ODQ0NDg4ODw8PDw8P
        Dw8PEBAQEBAQEhISERERExMTFBQUFhYWGhoaCgoKm5ub/v7+6+vr6urq6urq5ufn+fX0ZYOJADE7QWlw
        rLu98/Dw9PHw6Ojo5OXl6+npw8zNFkRNCjc/KCssU1FRaYqQFUdQJ0tTUWdqQWduFEJKLzAxPTo6VnZ8
        DUROGkxVFExWJEFGLSkpOT9AJjg7JCwuODQza4SID0lUKUlPAAAODg4PDw8ODg4ODg4PDw8PDw8QEBAR
        ERERERETExMTExMWFhYWFhYYGBgdHR0ODg6cnJz6+vrp6enm5ubo6Ojm5ubt6+uzv8Gsubzu7ezv7ezi
        4+Ph4eLl5eXf4ODu7Othe4AAKTMVPUYnMjUmISBFQ0JAQkInISA9Ojo1X2YXPkQzLy5COzpben8LQkwY
        S1QVSlQpPUEsJCJhZGVXa243PT4uKShMam8STFYoSE0AAA4ODg8PDw8PDw8PDxAQEBAQEBAQEBAQEBMT
        ExMTExYWFhUVFRYWFhcXFxsbGw4ODnd3d/Hx8eXl5eDg4OTk5OXl5eLi4uro6O/s7ODg4N7e3uHh4eHh
        4eDh4eLh4NXW1yBBSgs3QQ46RA86Qxo0ORooKx4rLRw0OBRCSwc6RCA8QCM3Oyg9QSxXXw9EThNIURhF
        TSY8QSI4PBkuMR4xNCA3PCBHThZLVBVNVihJTgAADg4OEBAQDw8PEBAQEBAQEBAQEBAQEhISFhYWFhYW
        FhYWFhYWGBgYGBgYHBwcDQ0NXV1d7u7u29vb397f3Nzc4+Pj4ODg3t/f3d3d39/f4N/g4ODg39/g3d3c
        y87PT2FoCDA5EDpDDzdBDjlCDDtFDj1HDj1HDDtFDjhBEDtEDD1HDENNC0JMC0BKEUROEkZPE0dREkpT
        FExVE0tVE0tWE0tVFEtUF0pTFk5XKElPAAAPDw8QEBAPDw8QEBAQEBAREREREREVFRUWFhYZGRkWFhYY
        GBgZGRkbGxscHBwbGxuysrLu7u7b2tva2trY2Njd3d7f39/e3d7e3t7e3t7e3t7c3Nza2drd3dxPXmUD
        ICkROkMPNT8QNT8QNj8PN0AOOEEOOUIOO0QQNj8SOUIOOUINP0gOQUoPQkwPQ0wRRE4SRk8TR1AUR1AT
        RlAUR1EVSFEXSlMXSlMVTVYoSE4AAA8PDxAQEBAQEBAQEBERERERERQUFBQUFBcXFxgYGBcXFxkZGRoa
        Gh0dHREREVlZWe/v79/f3+Hh4dfX19vb29jX19/f393d3d3d3dzc3NnZ2d/e3ujl5JCfohQnMBM1Pg81
        PxA0PQ81Pg82QA82PxA2Pw43QA45Qw06QxE2PxE6Qw07RA1ASQ1BSg5CTBBDTRBEThJFTxJFTxRJUhNH
        UBdKUxlNVhpMVRdOWChITgAAEBAQEREREhISExMTExMTExMTEhISEhISFxcXFxcXGBgYGRkZGxsbHR0d
        Dw8Pmpqa7Ozs3d3d4ODg3Nzc2NjY2tnZ1NTU1NTU0dHRzc3N1tbVw8jJYXuAEjM9Ey02ETM9EDM9EDM8
        EDQ9DTdBDjdADzY/DzY/DzdADjpDDzdAEjhBDzpDDTpDDDtFCjxGCT5IDUFLEUROFUlSF0pTF0tUEkdQ
        CD9JCUBJDEZQKUlPAAAQEBARERESEhITExMSEhISEhIPDw8SEhIXFxcXFxcYGBgaGhodHR0UFBRBQUHh
        4eHi4uLf39/f39/f3t/V1dXd3d3V1dXS0tLT0tLg3t3GyMgsRU0ELzkVMzwTMDkRMjsQMzwQMjsQMzwN
        N0ENOEIOOEAPNj8PN0APOUIOOUISN0ASPUYPOUMOO0UMPEUKPkcOQ0wWSVIYTFULQUoGPUciU1xykJaq
        vMBVfYUgQ0kAABAQEBERERERERERERISEhMTExUVFRMTExgYGBgYGBgYGBsbGx8fHw4ODnJycu/v793c
        3d/f3+Dg4NnZ2dnZ2dXU1NbW1t7c3MjKy3CBhilBSQ4pMhgxOhg1PhgqMxExOhAyOxAyOxAzPA42Pw81
        Pg81Pg82Pw43QA45QxA0PRM4QQ83Pw08RQ09Rg4/SQ9BSwo/SQI5Qwo/SUJrc5GnrNzi4/37+v///9bh
        4ylJTwAADw8PEBAQEBAQEBAQEBAQEhISFBQUFxcXGBgYGhoaGBgYGhoaHR0dExMTRUVF5+fn4ODg4eHh
        3t7e1dXV1tbW1tbW4d/fzdDRO1ZeACMtDy84EzM8FS02HSw1HiozFC02DzQ9EDM8EDM8EDQ9EDQ+DzY/
        DjdADjlCDzU+FTQ9EjdADjtEEUFKEEFKBzxGADdCGktUW36Er77B8PDx//z8//z8//38/fr6tsjLK0tQ
        AAAPDw8QEBAQEBAREREQEBASEhISEhIXFxcZGRkbGxsYGBgZGRkdHR0WFhZSUlLl5eXh4eHh4eHX19fZ
        2dnU1NTb3Nzm5OSnsbMIKzUXOEERMzwQMToPMToYJzAgLjcbLTYPND0QMz0QMz0PND0PNj8PN0APN0AO
        OEAUMToXNkATOEENPUcCND4EOEIrV2B8l5vT2dv7+Pj////++vrv8PDN1tiTqq5KcngZT1knR00AAA8P
        DxAQEBAQEBAQEBAQEBERERISEhMTExgYGBgYGBoaGhkZGRcXFyYmJtLS0urq6uLi4t3d3dvb29jY2NnZ
        2d3d3ejm5YiZnAAjLQcrNBI1PhE1PhM4QRc4QREkLRElLxEwORE5QxI4QRA5QhA6QxE6QxA5QhM3QBY6
        RAwxOwAvOQw+R0hsc6a2uefo6P/////9/ezt7cXP0YKcoTxnbxhLVAc+SA1CTBRMVilJTgAADw8PEBAQ
        Dw8PEBAQEBAQEREREhISEhISFRUVGBgYGhoaGxsbHR0dFhYWgoKC6enp39/f4uLi5eXl2tra39/f3t7e
        4+LivcPFfpKWlaOmuL/Bt7/BusHCxMrLkpmdQ1lfGDE6BiYwBicwCiozCyozBikyCDE7AC85ADE7IUdQ
        co2Sxs7Q//r5///+6erqsL/Cbo2SOmVsEkdQBj1HDEFLFkpTGk1VGUxVFUxWJ0hNAAAPDw8QEBAPDw8P
        Dw8QEBAQEBARERESEhITExMXFxcVFRUZGRkdHR0SEhJHR0fq6url5eXu7u7m5ubh4eHh4eHh4eHe3t7l
        4+Pw7e3u7Ozo5ubl5OTi4eHi4eHq6Ojd3t7BxceBi5Bjc3lDWWA+Vl6MmZ2xvL58l5yTpqrp6Oj//v3h
        4+SgsrVmhYwvXGQLQUsEPEULQUoVSVIaTVYRRk8KQEoLQkwSRk8VTFYnR00AAA4ODhAQEA8PDw8PDxAQ
        EBAQEBERERERERISEhUVFRYWFhgYGBwcHA0NDXd3d/Ly8uLi4ufn5+np6eDg4OTk5OPj4+Lh4eDg4ODg
        4N/g39vc3d/f3+ro5+nn59na2t7e3uHh4Ojn5+no597f39vd3evp6e3r6/75+N7h4Zqsr1Z4fx1NVgM6
        RAI5QwxBSxRIURhLVBdKUxdKUxFGTy5cZKy9wKK2uSVVXRFKUyhJTgAADg4ODw8PDw8PEBAQEBAQEBAQ
        EBAQEBAQEhISEhISFRUVExMTFxcXBgYGe3t7+vr65+fn5ubm5ubm4uLi5OTk5ubm5eXl5eXl5OTk4uLj
        7+zr4eLiip6iRGZsL05WRmNqt7/B5eXl3+Dg6+rq9vPy7+3t9fLyiZ+iCz9JADY/AThCDEFLE0ZQFUhS
        FUhSFEhRFUlSFUlSGUxVBj1Hl62x////////iKGmBkJMLExRAAANDQ0PDw8PDw8PDw8PDw8QEBAPDw8S
        EhISEhITExMRERESEhIWFhYFBQVwcHD8/Pzp6ens7Ozm5ubn5+fk5OTp6eno6Ojl5ubl5eXq6emSpqov
        WGAHOUIBLjcAKzWImZ3y8O/y8O/59fTZ3d5wjJFTdn1GbHQOQksEO0QPRE0RRE0UR1ETR1AUSFEUSFEV
        SVIVSVIWSlMZTVUIP0lri5H9+/v5+flcgIYMRlArS1EAAAwMDA4ODg4ODg4ODg4ODg8PDxAQEBERERAQ
        EBISEhAQEBAQEBQUFAMDA5eXl/7+/uzs7O/v7+3t7enp6ejo6Orq6urq6u/u7vf09FZ5fwA0PgAyPAA1
        Pw4+SIyhpf75+O3t7aS1uHeSlypXXwA1QAM5QwU7RhJFTxFEThFETRFFThRIURVJUhVJUhZKUxZKUxZK
        UxdLVBZKUhVKUxJHUE11fElyeRJHUBhQWSlJTwAADQ0NDg4ODg4ODw8PDw8PDw8PEBAQDg4OEBAQEBAQ
        EBAQEBAQExMTBQUFrq6u/v7+7+/v8fHx8vLy7e3t7u7u6+vr7+7u4uTlZYSKAC85FEZPT3R6fZebydPU
        //v6zdXWU3d+AThDAjlDDEJLFUhRFUhRFUhRFEhRFElREkZQFEhSE0dQFUlSFUlSFkpTFUpTFkpTFkpT
        FkpTGExVF0tUDkROD0ZPGk1WF1BZKUlPAAAMDAwODg4PDw8PDw8PDw8ODg4MDAwMDAwQEBAPDw8PDw8Q
        EBAREREICAi3t7f////x8fHz8/Pz8/Pz8/Pv7/Dw8PH39fV+mJ0jUlp0kJXO1tf19PT///7///+Tqa0V
        SVIHPkcWSVIXSlMXSlMVSVIVSVIVSVIVSVIVSVIVSVIUSFEVSlMUSFEVSVIUSVIVSVIWSlMXTFUaTlcY
        TFUYTFUbT1gbT1gZTVYYUFoqSlAAAAwMDA0NDQ4ODg4ODg4ODg4ODgwMDAwMDA8PDw4ODg4ODg8PDxER
        EQUFBba1tv7+/vLy8vT09PT09PPz8/Ly8vPz8/Hx8evs7fLy8v36+fr49/z6+fn4+IGdoQY9RxNIURlM
        VRVJUhVJUhdLVBZKUxZKUxZKUxZKUxZKUxZKUxVJUhZKUxVJUhZKUxVJUhZKUxdLVBhMVRlOVxhNVhhN
        VhlOVhlOVxlNVhhQWipLUAAACwsLCwsLDAwMDAwMDQ0NDQ0NDg4ODQ0NDg4ODg4ODg4ODg4OEhISAAAA
        iIiI////8PDw9fX19fX18vLy8/Pz8vLy9PT09vX19PT07/Hx6evsucfKR292CkFLFUlSF0tUFkpTFkpT
        FkpTF0tUF0tUFkpUF0tUF0tUF0tUFUlSFkpTFkpTGExVF0xVGExVGExVGExVGE1WGExVGU1XGExWGU5X
        Gk5YGk5XGVFbKkpRAAAJCQkLCwsLCwsLCwsLCwsMDAwNDQ0ODg4NDQ0ODg4NDQ0NDQ0PDw8ICAgmJibp
        6en4+Pjx8fH09PTz8/Pz8/P09PT19fX19fXw8vL///+nur4EPUcORE0XSlMVSVIVSVIXS1QXS1QXS1QX
        S1QXS1QXS1QXTFUYTFUWSlMWSlQWSlMYTFUYTVYYTFUYTVYYTVYZTVYZTlcYTVYYTVYZTVcaTlgaT1gb
        TlgaUVsqS1EAAAgICAoKCgoKCgsLCwsLCwsLCwsLCw0NDQ0NDQ0NDQ0NDQ0NDQ0NDRAQEAAAAGFhYf//
        //////Pz8/T09PT09PX19fX19fP09Pj4+Nfe4D5pcRNIURxPWBZKUxZKUxZJUhdLVBhLVBdLVBhLVBhM
        VRhMVRhMVRdLVBdLVBdLVBdLVBlNVhhNVhlNVhhNVhlNVhpOVxpOWBlOVxlNVhlOVxlOVxtPWBxPWBpR
        XCtKUQAABwcHCgoKCAgICQkJCQkJCgoKCgoKCgoKDAwMCwsLDAwMDAwMDAwMDAwMDg4OBAQEZGRknp6e
        9fX1+fn5+fn5+vr6+fn59vf3////aYuRAz1HHFBZF01WGE1WFktUF0xVF0xVGE1WGE1WGE1WGE1XGE5X
        GE1WGE1WGU5XF01WGU5XGU5XGE5XGU9YGU9YGU9YGk9YGk9ZGlBZGk9ZGk9ZG1BaG1BaHVFbHFReK0tS
        AAAKCgoMDAwMDAwMDAwNDQ0ODg4ODg4ODg4PDw8QEBAPDw8RERERERERERESEhIUFBQEBAQICAjPz8/3
        9/fu7u7w8PDw8PDu7u729vZihIoSRk8eUFgcTlcdT1ccTlYcTlYcTlYbTFUbTVYbTVYbTVUcTVYcTlcd
        UFgdT1gcT1cdT1gdUFgdT1geUFkeUFkeUFkeUFkeUVkeUFofUVofUFkfUVofUVogUVoeU1wvTVMAACcn
        JygoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCwsLCgoKDk5OUVFRUND
        Q0NDQ0NDQ0NDQ0NDQy4zNCkvMCowMSowMSowMSowMSowMSowMSovMSowMSowMSowMSowMSowMSowMSow
        MSowMSowMSowMSowMSowMSowMSowMSowMSowMSowMSowMSowMSowMSowMSoxMSkvMDQ3OAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>